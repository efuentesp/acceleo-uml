[comment encoding = UTF-8 /]
[module repositorySearchAres('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public generateElementRepository(repositoryClass : Class)]
[comment @main /]

[file ('main/java/'.concat(repositoryClass._package.name.replaceAll('\\.','/')).concat('/persistence/').concat(repositoryClass.name.toLower()).concat('/impl/').concat('Search').concat(repositoryClass.name).concat('RepositoryImpl.java'), false), 'UTF-8')]
package [namespace.name.toLower()/].persistence.[repositoryClass.name.toLower()/].impl;

import org.springframework.stereotype.Repository;
import com.softtek.frmwrk.base.persistence.BaseRepositoryImpl;
import [namespace.name.toLower()/].domain.[name.toUpperFirst()/];
import [namespace.name.toLower()/].persistence.[repositoryClass.name.toLower()/].Search[name.toUpperFirst()/]Repository;

@Repository("search[name.toUpperFirst()/]Repository")
public class Search[name.toUpperFirst()/]RepositoryImpl extends BaseRepositoryImpl<[name.toUpperFirst()/]> implements Search[name.toUpperFirst()/]Repository {

	private static final long serialVersionUID = 1L;

	public Search[name.toUpperFirst()/]RepositoryImpl() {
		super([name.toUpperFirst()/].class);
	}

}
[/file]
[file ('main/java/'.concat(repositoryClass._package.name.replaceAll('\\.','/')).concat('/persistence/').concat(repositoryClass.name.toLower()).concat('/').concat('Search').concat(repositoryClass.name).concat('Repository.java'), false), 'UTF-8') ]
package [namespace.name.toLower()/].persistence.[repositoryClass.name.toLower()/];

import com.softtek.frmwrk.base.persistence.BaseRepository;
import [namespace.name.toLower()/].domain.[name.toUpperFirst()/];

public interface Search[name.toUpperFirst()/]Repository extends BaseRepository<[name.toUpperFirst()/]> {
	
}
[/file]
[/template]